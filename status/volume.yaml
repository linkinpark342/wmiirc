require:
  - rbconfig

status:
  volume:
    params:
      mixer:

    script: |
      case ::RbConfig::CONFIG['host_os']
      when /linux/

        @mixer ||= 'Master'

        def reading
          `amixer get #{@mixer}`
        end

        def level
          reading[/\d+%/]
        end

        def level= value
          system "amixer -q set #{@mixer} #{value}"
          refresh
        end

        def increase
          self.level = '5%+'
        end

        def decrease
          self.level = '5%-'
        end

      when /bsd/

        @mixer ||= 'mixer'

        def reading
          `mixer #{@mixer}`
        end

        def level
          reading.split.last.first.split(':').first
        end

        def level= value
          system "mixer #{@mixer} #{value}"
          refresh
        end

        def increase
          self.level = '+3'
        end

        def decrease
          self.level = '-3'
        end

      else
        raise NotImplementedError, 'OS not supported'
      end

      def mute!
        self.level = 'toggle'
      end

      def mute
        self.level = 'mute'
      end

      def unmute
        self.level = 'unmute'
      end

      def mute?
        reading.include? '[off]'
      end

      def menu
        current = self.level
        levels = (0 .. 10).map {|i| i * 10 }.
                 push(current.to_i).sort.uniq.
                 map {|i| "#{i}%" }.reverse

        if choice = click_menu(levels, current)
          self.level = choice
        end
      end

    label: |
      color = 'notice' if mute?
      [color, "\u266B", level]

    control:
      action:
        volume_menu: self.menu
        volume_more: self.increase
        volume_less: self.decrease
        volume_mute!: self.mute!
        volume_mute: self.mute
        volume_unmute: self.unmute

      mouse_action:
        left_click: volume_menu
        right_click: volume_mute!
        wheel_up: volume_more
        wheel_down: volume_less
